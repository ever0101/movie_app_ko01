{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","App","state","count","isLoading","movies","plus","setState","currnet","minus","current","this","getMovies","a","console","log","axios","get","data","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiCeA,MA7Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAG,KAAhD,SACA,oBAAIH,UAAU,SAAd,SACGD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBN,UAAU,eAA1B,SACGK,GADMC,eCwDNC,G,kNA/DbC,MAAQ,CACNC,MAAO,EACPC,WAAW,EACXC,OAAQ,I,EAEVC,KAAO,WAEL,EAAKC,UAAS,SAACC,GAAD,MAAc,CAAEL,MAAO,EAAKD,MAAMC,MAAQ,O,EAE1DM,MAAQ,WACN,EAAKF,UAAS,SAAUG,GACtB,MAAO,CAAEP,MAAOQ,KAAKT,MAAMC,MAAQ,O,EAIvCS,U,sBAAY,8BAAAC,EAAA,6DACVC,QAAQC,IAAI,aADF,SAMAC,IAAMC,IACd,4DAPQ,gBAIEZ,EAJF,EAGRa,KACEA,KAAQb,OAKZS,QAAQC,IAAIV,GACZ,EAAKE,SAAS,CAAEF,SAAQD,WAAW,IAVzB,2C,kEAaVU,QAAQC,IAAI,qBACZJ,KAAKC,c,2CAGLE,QAAQC,IAAI,a,+BAGZD,QAAQC,IAAI,YADL,MAEuBJ,KAAKT,MAA3BE,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,yBAASX,UAAU,YAAnB,SACGU,EACC,qBAAKV,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGW,EAAOP,KAAI,SAACqB,GAAD,OACV,cAAC,EAAD,CAEE/B,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAM/B,e,GAhDTiC,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAIFC,SAASC,eAAe,W","file":"static/js/main.26d97f0a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title}></img>\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n        <ul className=\"genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres_genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//정적인 하드코딩 데이터를 props로 다뤘고 이제 state를 배우기 위해 class를 선언한다\nclass App extends React.Component {\n  state = {\n    count: 0,\n    isLoading: true,\n    movies: [],\n  };\n  plus = () => {\n    // this.setState({ count: this.state.count + 1 });  // 안좋은 방법\n    this.setState((currnet) => ({ count: this.state.count + 1 }));\n  };\n  minus = () => {\n    this.setState(function (current) {\n      return { count: this.state.count - 1 };\n    });\n  };\n\n  getMovies = async () => {\n    console.log(\"getMovies\");\n    const {\n      data: {\n        data: { movies },\n      }, //es6 문법 movies.data.data.movies 말고!\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.getMovies();\n  }\n  componentDidUpdate() {\n    console.log(\"Updated\");\n  }\n  render() {\n    console.log(\"Rendered\");\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import Pomme from \"./Pomme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Pomme /> */}\n    {/* component: HTMl을 반환하는 함수 */}\n  </React.StrictMode>, //React.StrictMode가 one component여서 두 개 해도 되는건가?\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}